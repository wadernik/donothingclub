// ES6 класс, который наследует существующий класс Array.
// Это позволит нам использовать созданный класс как 
// массив, но со своими методами.
class Patient extends Array {
   // Конструктор класса.
   // В конструктор с помощью такой схемы мы можем
   // передать неограниченное к-во аргументов в виде множества,
   // что позволит передать сюда объект без каких-либо проблем,
   // из которого будет строится экземпляр.
   // Для того, чтобы задать изначальный экземпляр,
   // вызывается конструктор родительского класса с помощью
   // метода super(), что даст нам возможность работать с "this".
   constructor (...args) {
      super(...args);
   }

   // Метод класса, добавляющий в массив новый элемент.
   // Реализован с помощью метода родительского класса push()
   add(patient) {
      this.push(patient);
   }

   // Метод класса, добавляющий в существующюю таблицу
   // в тело <tbody> элементы с помощью jquery метода html() 
   printPatient() {
      var tableBody;
      if (this.length == 0) {
         $('#tBody').empty();
      } else {
         this.forEach(element => {
            tableBody +=
            `<tr>
            <td>${element.patientNum}</td>
            <td>${element.name}</td>
            <td>${element.diagnosis}</td>
            <td>${element.ward}</td>
            </tr>`;
         });
         $('#tBody').html(tableBody);
      }
   }
   
   // Массив хранит в себе уникальный индекс каждой записи и объект,
   // который принадлежит этому индексу.
   // Метод класса использует индекс искомой записи в массиве, поиск осуществляется
   // по одному из полей объекта.
   // По найденному индексу в таблице на строку добавляется класс "active",
   // который окрашивает строку в другой цвет, а так же переносится скролл к этой строке
   // (на случай, если записей в массиве очень много).
   // "active"
   findPatient(key) {
      let index = this.findIndex(el => el.patientNum == key);
      if (index >= 0) {
         var row = $('table').find('tr')
         .removeClass('active')
         .eq(index + 1)
         .addClass('active');
         
         if (row.length){
            $(window).scrollTop( row.offset().top - ($(window).height()/2) );
         }   
      } else {
         alert('Пациент не найден');
      }
   }

   // Метод класса, который удаляет из массива искомую запись. Поиск так же производится
   // по одному из полей объекта, а удаление осуществляется по индексу найденной записи
   // с помощью  метода родительского класса Array splice(). В результате "пуляется"
   // alert().
   removePatient(key) {
      let index = this.findIndex(el => el.patientNum == key);
      if (index >= 0) {
         this.splice(index, 1);
         alert('Успешно удалено');
      } else {
         alert('Пациент не найден');
      }
   }
}